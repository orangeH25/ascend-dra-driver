name: Release

# ------------------------------------------------------------
# This workflow does the following:
# 1. Build Docker image from source and push it to Docker Hub
# 2. Update Helm values.yaml and package Helm chart
# 3. Update install.sh script with the new release version
# 4. Create a GitHub Release and upload Helm package + install.sh
# ------------------------------------------------------------

on:
  workflow_dispatch:    # Allow manual triggering of the workflow
    inputs:
      version:
        description: 'Release version (e.g., v0.1.0)'
        required: false
        default: 'latest'

jobs:
  release:
    runs-on: ubuntu-22.04
    if: github.repository == 'orangeH25/ascend-dra-driver'
    env:
      IMAGE_NAME: ascend-dra-driver
      REGISTRY: docker.io/orangeh
      VERSION: ${{ github.event.inputs.version || format('manual-{0}', github.run_id) }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Build Docker image
        run: |
          echo "Building Docker image: ${IMAGE_NAME}:${VERSION}"
          chmod +x demo/build-driver.sh
          DRIVER_IMAGE_REGISTRY=${REGISTRY} DRIVER_IMAGE_TAG=${VERSION} ./demo/build-driver.sh

      - name: List Docker images
        run: |
          echo "Show build image:"
          docker images | grep "${IMAGE_NAME}"

      - name: Retag image
        run: |
          docker tag ${IMAGE_NAME}:${VERSION} ${REGISTRY}/${IMAGE_NAME}:${VERSION}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          MAX_RETRIES=3
          for i in $(seq 1 $MAX_RETRIES); do
            echo "Attempt $i: pushing Docker image ${REGISTRY}/${IMAGE_NAME}:${VERSION}..."
            if docker push ${REGISTRY}/${IMAGE_NAME}:${VERSION}; then
              echo "Docker push succeeded on attempt $i"
              break
            else
              echo "Docker push failed on attempt $i"
              if [ $i -eq $MAX_RETRIES ]; then
                echo "Reached max retries, exiting."
                exit 1
              fi
              echo "Retrying in 5 seconds..."
              sleep 5
            fi
          done

          
      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.15.2

      - name: Prepare Helm values.yaml    # Replace test values with release values
        run: |
          mkdir -p tmp-helm
          cp deployments/helm/ascend-dra-driver/values.yaml tmp-helm/values.yaml
          sed -i "s|repository: .*|repository: ${REGISTRY}/${IMAGE_NAME}|g" tmp-helm/values.yaml
          sed -i "s|tag: .*|tag: ${VERSION}|g" tmp-helm/values.yaml

      - name: Package Helm chart
        run: |
          mkdir -p package
          helm package deployments/helm/ascend-dra-driver \
            -f tmp-helm/values.yaml \
            -d ./package
          mv ./package/ascend-dra-driver-*.tgz ./package/ascend-dra-driver-${VERSION}.tgz
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          rm -rf tmp-helm
          echo "Helm chart package: package/ascend-dra-driver-${VERSION}.tgz"

      - name: Update install.sh with release version
        run: |
          cp install.sh install-release.sh
          sed -i "s|VERSION=\${1:-latest}|VERSION=${VERSION}|g" install-release.sh
          echo "Updated install.sh for release version ${VERSION}"

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            package/ascend-dra-driver-${{ env.VERSION }}.tgz
          file-name-map: | 
            install-release.sh:install.sh  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log release upload
        run: echo "Uploading release assets..."          
